openapi: 3.0.0
info:
  title: 상품 등록 API
  description: "이미지와 함께 상품 정보를 등록하는 API"
  version: 1.0.0

paths:
  /api-server/item/addItem:
    post:
      summary: "상품 등록"
      description: "이미지와 함께 상품 정보를 등록합니다."
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: "업로드할 이미지 파일 (다중 업로드 가능)"
                categoryId:
                  type: integer
                  example: 1
                  description: "카테고리 ID"
                title:
                  type: string
                  example: "맥북 프로 16인치 팝니다"
                  description: "상품 제목"
                price:
                  type: integer
                  example: 30000
                  description: "상품 가격"
                detail:
                  type: string
                  example: "거의 새상품입니다. 실사용 1개월"
                  description: "상품 상세 설명"
                itemStatus:
                  type: string
                  example: "최상"
                  description: "상품 상태"
                latitude:
                  type: number
                  format: float
                  example: 37.5665
                  description: "위도 정보"
                longitude:
                  type: number
                  format: float
                  example: 126.9780
                  description: "경도 정보"
      responses:
        "201":
          description: "상품 등록 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "상품이 성공적으로 등록되었습니다."
        "400":
          description: "잘못된 요청"
        "500":
          description: "서버 오류"

  /api-server/chat:
    get:
      summary: "채팅 정보 조회"
      tags:
        - Chat
      responses:
        "200":
          description: "채팅 메시지와 채팅방 목록 조회 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: array
                    items:
                      $ref: "#/components/schemas/ChatMessage"
                  room:
                    type: array
                    items:
                      $ref: "#/components/schemas/ChatRoom"
        "500":
          description: "서버 오류"
  /api-server/chat/image:
    post:
      summary: "채팅 이미지 업로드 및 메시지 저장"
      tags:
        - Chat
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: "업로드할 이미지 파일"
                roomId:
                  type: integer
                  example: 1
                  description: "채팅방 ID"
                senderId:
                  type: integer
                  example: 1
                  description: "메시지를 보낸 사용자 ID"
      responses:
        "200":
          description: "이미지 메시지 저장 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatMessage"
        "400":
          description: "잘못된 요청"
        "500":
          description: "서버 오류"

  /api-server/chat/room/{roomId}/read:
    post:
      summary: "채팅방 메시지 읽음 처리"
      tags:
        - Chat
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: integer
          description: "채팅방 ID (경로 파라미터)"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  example: 1
                  description: "메시지를 읽은 사용자 ID"
      responses:
        "200":
          description: "읽음 처리 성공"
          content:
            application/json:
              schema:
                type: integer
                example: 5
                description: "업데이트된 메시지 수"
        "401":
          description: "인증 실패"
        "500":
          description: "서버 오류"

components:
  schemas:
    ChatMessage:
      type: object
      properties:
        id:
          type: integer
          example: 1
        roomId:
          type: integer
          example: 1
        senderId:
          type: integer
          example: 1
        message:
          type: string
          example: "message example"
        isRead:
          type: boolean
          example: false
        msgType:
          type: string
          enum:
            - text
            - image
          example: "text"
        createdAt:
          type: string
          format: date-time
          example: "2025-02-19T12:00:00Z"
    ChatRoom:
      type: object
      properties:
        id:
          type: integer
          example: 1
        itemId:
          type: interger
          example: 1
        chatHost:
          type: interget
          example: 1
        chatGuest:
          type: interget
          example: 2
        createdAt:
          type: string
          format: date-time
          example: "2025-02-19T12:00:00Z"
