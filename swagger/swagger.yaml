openapi: 3.0.0
info:
  title: Item API
  description: "상품 등록 및 조회 API (이미지 포함)"
  version: 1.0.0

servers:
  - url: http://localhost:8080/api-server
    description: 로컬 개발 서버

paths:
  /item/item:
    get:
      summary: "전체 상품 조회"
      description: >
        카테고리(`categoryId`), 지역(`regionId`), 거래 상태(`status`)를 기준으로 상품을 필터링하여 조회합니다.  
        각 상품에는 대표 이미지(`thumbnailUrl`), 사용자의 찜 여부(`isFavorited`), 지역명(`region.name`)이 포함됩니다.  
        **sortBy** 파라미터를 통해 최신순(`latest`) 또는 인기순(`popular`)으로 정렬할 수 있습니다.
      parameters:
        - name: categoryId
          in: query
          description: "필터링할 카테고리 ID (0이면 전체 조회)"
          required: false
          schema:
            type: integer
        - name: regionId
          in: query
          description: "필터링할 지역 ID (0이면 전체 조회)"
          required: false
          schema:
            type: integer
        - name: status
          in: query
          description: >
            거래 상태 필터:  
            - `available` → 거래 가능 (아직 구매자가 없음)  
            - `completed` → 거래 완료 (구매자 존재)
          required: false
          schema:
            type: string
            enum: [available, completed]
        - name: sortBy
          in: query
          description: >
            정렬 기준 선택:  
            - `latest` (기본값) → 최신 등록 순  
            - `popular` → 인기순 (찜 많은 순)
          required: false
          schema:
            type: string
            enum: [latest, popular]
            default: "latest"
      responses:
        "200":
          description: "성공적으로 상품 목록을 조회함"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Item"
        "400":
          description: "잘못된 요청 (쿼리 파라미터 오류 등)"
        "500":
          description: "서버 오류 (내부 에러 발생)"

  /item/addItem:
    post:
      summary: "상품 등록"
      description: "이미지와 함께 상품 정보를 등록합니다."
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: "업로드할 이미지 파일 (다중 업로드 가능)"
                categoryId:
                  type: integer
                title:
                  type: string
                  example: "맥북 프로 16인치 팝니다"
                price:
                  type: integer
                detail:
                  type: string
                itemStatus:
                  type: string
                latitude:
                  type: number
                  format: float
                longitude:
                  type: number
                  format: float
      responses:
        "201":
          description: "상품 등록 성공"
        "400":
          description: "잘못된 요청"
        "500":
          description: "서버 오류"

components:
  schemas:
    Item:
      type: object
      properties:
        id:
          type: integer
          example: 1
        userId:
          type: integer
          example: 101
        title:
          type: string
          example: "새로운 상품"
        price:
          type: integer
          example: 50000
        status:
          type: string
          example: "available"
        detail:
          type: string
          example: "상품 상세 설명"
        itemStatus:
          type: string
          example: "new"
        category:
          type: object
          properties:
            name:
              type: string
              example: "전자제품"
        region:
          type: object
          properties:
            province:
              type: string
              example: "서울특별시"
            district:
              type: string
              example: "강남구"
        imageUrl:
          type: string
          example: "https://example.com/image.jpg"
