openapi: 3.0.0
info:
  title: User API
  description: Dongnezio user 관련 API 문서
  version: 1.0.0
paths:
  /user/token:
    post:
      summary: "로그인 유지"
      description: "로그인된 사용자의 정보를 반환하여 로그인 상태를 유지합니다."
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "사용자 정보 반환"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  nickname:
                    type: string
                    example: "testNickname"
                  id:
                    type: integer
                    example: 1
                  profileImg:
                    type: string
                    example: "https://example.com/profile.jpg"
        "400":
          description: "사용자 정보 없음"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "사용자를 찾을 수 없습니다."
        "500":
          description: "서버 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "user 정보를 찾을 수 없습니다!"

  /user/sendCode:
    post:
      summary: "인증 번호 이메일 전송"
      description: "이메일로 인증 번호를 전송합니다."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
      responses:
        "200":
          description: "인증 번호 발송 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "이메일로 인증번호를 발송했습니다. 인증번호를 입력해주세요."
                  token:
                    type: string
                    example: "jwt-token-example"
        "500":
          description: "이메일 전송 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "이메일 전송 중 오류가 발생했습니다. 나중에 다시 시도해주세요."

  /user/verifyCode:
    post:
      summary: "인증번호 검증"
      description: "사용자가 입력한 인증번호를 검증합니다."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "123456"
                token:
                  type: string
                  example: "jwt-token-example"
      responses:
        "200":
          description: "인증 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "인증 성공!"
        "400":
          description: "인증번호 불일치"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "인증번호가 일치하지 않습니다. 다시 시도해주세요."
        "500":
          description: "토큰 검증 실패"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "JWT 검증 실패 또는 만료된 토큰입니다."

  /user/join:
    post:
      summary: "회원가입 (로컬)"
      description: "이메일, 이름, 닉네임, 비밀번호를 이용한 회원가입을 처리합니다."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
                name:
                  type: string
                  example: "John Doe"
                nickname:
                  type: string
                  example: "johnny"
                password:
                  type: string
                  example: "password123"
      responses:
        "200":
          description: "회원가입 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "회원가입 성공"
        "400":
          description: "이미 존재하는 이메일/닉네임"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "이미 가입된 이메일입니다."
        "500":
          description: "서버 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "서버 오류가 발생했습니다."

  /user/findPw:
    post:
      summary: "비밀번호 찾기"
      description: "이메일 인증 후 비밀번호를 재설정합니다."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "123456"
                token:
                  type: string
                  example: "jwt-token-example"
                newPw:
                  type: string
                  example: "newPassword123"
      responses:
        "200":
          description: "비밀번호 변경 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "비밀번호가 성공적으로 변경되었습니다."
        "400":
          description: "인증번호 불일치"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "인증번호가 일치하지 않습니다. 다시 시도해주세요."
        "404":
          description: "사용자 찾을 수 없음"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "해당 이메일을 가진 사용자가 없습니다."
        "500":
          description: "서버 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "비밀번호 변경 중 오류가 발생했습니다."

  /user/checkId:
    post:
      summary: "아이디 중복 검사"
      description: "이메일이 이미 등록되어 있는지 확인합니다."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
      responses:
        "200":
          description: "아이디 사용 가능"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "사용 가능한 아이디입니다."
        "400":
          description: "이미 존재하는 아이디"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "이미 존재하는 아이디입니다."
        "500":
          description: "서버 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "서버 오류가 발생했습니다."

  /user/login/local:
    post:
      summary: "로컬 로그인"
      description: "로컬 인증을 통한 사용자 로그인"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
                password:
                  type: string
                  example: "password123"
      responses:
        "200":
          description: "로그인 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "로그인 성공"
        "401":
          description: "로그인 실패"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "로그인 실패"
        "500":
          description: "서버 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "서버 오류 발생"

                    /user/login/kakao:
    get:
      summary: "카카오 로그인"
      description: "카카오 로그인 요청을 시작합니다. 카카오 OAuth 인증 페이지로 리다이렉트됩니다."
      responses:
        "200":
          description: "카카오 로그인 요청 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "카카오 로그인 요청"
        "500":
          description: "서버 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "서버 오류 발생"

  /user/kakao/callback:
    get:
      summary: "카카오 로그인 콜백"
      description: "카카오 인증 후 콜백 URL입니다. 카카오 인증 완료 후 사용자 정보를 가져와 JWT 토큰을 발급합니다."
      responses:
        "200":
          description: "카카오 로그인 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "로그인 성공"
        "401":
          description: "카카오 로그인 실패"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "카카오 로그인 실패"
        "500":
          description: "서버 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "서버 오류 발생"

  /user/logout:
    post:
      summary: "로그아웃"
      description: "로그인된 사용자 로그아웃 처리. 로컬 JWT 토큰 삭제 및 카카오 로그아웃."
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "로그아웃 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "로그아웃되었습니다."
                  kakaoLogoutUrl:
                    type: string
                    example: "https://kauth.kakao.com/oauth/logout?...logout_redirect_uri=..."
        "401":
          description: "로그인 정보 없음"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "로그인이 필요합니다."
        "500":
          description: "서버 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "서버 오류 발생"

  /user/changeInfo:
    patch:
      summary: "회원 정보 수정"
      description: "사용자가 자신의 닉네임, 비밀번호, 프로필 이미지를 수정할 수 있습니다."
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  example: "newNickname"
                oldPw:
                  type: string
                  example: "oldPassword123"
                newPw:
                  type: string
                  example: "newPassword123"
      responses:
        "200":
          description: "회원 정보 수정 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "회원 정보 수정 성공"
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      nickname:
                        type: string
                        example: "newNickname"
                      profileImg:
                        type: string
                        example: "https://example.com/profile.jpg"
        "400":
          description: "로그인 정보 없음"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "로그인 정보가 없습니다."
        "500":
          description: "서버 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "서버 오류 발생"

  /user/deleteUser:
    delete:
      summary: "회원 탈퇴"
      description: "사용자가 자신의 계정을 탈퇴합니다. 카카오 로그인이 연결된 경우 카카오 계정도 연동 해제됩니다."
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "회원 탈퇴 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "회원 탈퇴가 완료되었습니다."
        "401":
          description: "로그인 정보 없음"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "로그인이 필요합니다."
        "500":
          description: "서버 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "회원 탈퇴 실패"

  /user/checkNick:
    post:
      summary: "닉네임 중복 검사"
      description: "사용자가 입력한 닉네임이 이미 존재하는지 확인합니다."
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                  example: "newNickname"
      responses:
        "200":
          description: "닉네임 사용 가능"
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "사용 가능한 닉네임입니다."
        "400":
          description: "이미 존재하는 닉네임"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "이미 존재하는 닉네임입니다."
        "500":
          description: "서버 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "서버 오류 발생"
